name: Feature/BugFix

on: [ push ]
env:
  COVERAGE_REPOSITORY_GIT: ${{ vars.COVERAGE_REPOSITORY_GIT }}
  COVERAGE_GITHUB_TOKEN: ${{ secrets.COVERAGE_GITHUB_TOKEN }}

jobs:
  cache-and-install:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Prepare
      uses: ./.github/actions/prepare
      with:
        node-version: 16
        
  lint:
    needs: cache-and-install

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          node-version: 16
      - name: Lint
        run: pnpm lint

  e2e-tests:
    needs: cache-and-install

    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          node-version: 16

      - name: Run Cypress tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          command: pnpm --dir apps/e2e/ cypress:run
          start: pnpm --dir apps/web/ dev
          wait-on: 'http://localhost:3000'
      
  e2e-docker-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install global dependencies
        id: global-dependencies
        shell: bash
        run: |
          npm i -g npm-run-all

      - name: Build docker image
        shell: bash
        run: npm run --prefix apps/e2e/ docker:build

      - name: Build testing docker image
        shell: bash
        run: npm run --prefix apps/e2e/ docker:build:e2e

      - name: Run Cypress tests
        shell: bash
        run: npm run --prefix apps/e2e/ docker:test
           
      - name: Publish coverage
        if: ${{ env.COVERAGE_GITHUB_TOKEN != '' && env.COVERAGE_REPOSITORY_GIT != '' }}
        shell: bash
        run: |
          sudo chown -R $(id -u):$(id -g) apps/e2e/coverage
          ACTUAL_BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          ACTUAL_LOG_MESSAGE=$(git log -n 1 --pretty=format:"%s [%H]" $hash)
          cd apps/e2e/coverage
          git config --global init.defaultBranch main
          git config --global user.email "job@github.ci"
          git config --global user.name "github"
          git init
          git checkout -B $ACTUAL_BRANCH_NAME
          git add .
          git commit -m "$ACTUAL_LOG_MESSAGE"
          git remote add origin https://${{ env.COVERAGE_GITHUB_TOKEN }}@github.com/${{ env.COVERAGE_REPOSITORY_GIT }}
          git push -f origin $ACTUAL_BRANCH_NAME